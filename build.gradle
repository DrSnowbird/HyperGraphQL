buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id "io.freefair.lombok" version "6.3.0"
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'org.hypergraphql'
version = '3.0.2'

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    log4jVersion = '2.17.1'
    graphqlVersion = '15.0'
    jenaVersion = '4.2.0'
    lombokVersion = '1.18.22'
}
dependencies {

    compileOnly group: 'org.projectlombok', name:'lombok', version: lombokVersion
    annotationProcessor group: 'org.projectlombok', name:'lombok', version: lombokVersion

    implementation group: 'com.graphql-java', name: 'graphql-java', version: graphqlVersion

    implementation group: 'org.apache.jena', name: 'jena-arq', version: jenaVersion
    implementation group: 'org.apache.jena', name: 'jena', version: jenaVersion
    implementation group: 'org.apache.jena', name: 'jena-core', version: jenaVersion
    implementation group: 'org.apache.jena', name: 'jena-fuseki-main', version: jenaVersion
    implementation group: 'org.apache.jena', name: 'jena-querybuilder', version: jenaVersion

    //implementation group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: log4jVersion
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4jVersion
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha5'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha5'

    implementation group: 'com.sparkjava', name: 'spark-core', version: '2.9.3'
    implementation group: 'com.sparkjava', name: 'spark-template-velocity', version: '2.7.1'

    implementation group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'

    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.869'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'

    testCompileOnly('org.apiguardian:apiguardian-api:1.1.2')

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.8.2'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    )

    testCompileOnly group: 'org.projectlombok', name:'lombok', version: lombokVersion
    testAnnotationProcessor group: 'org.projectlombok', name:'lombok', version: lombokVersion
}

checkstyle {
    toolVersion '8.29'
    configFile file("checkstyle/checkstyle.xml")
}
checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

test {
    systemProperty 'hgql_version', project.version
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

task execute(type:JavaExec) {
    systemProperty('hgql_version', project.version)
    main('org.hypergraphql.Application')
    classpath = sourceSets.main.runtimeClasspath

    if(project.hasProperty('a')){
        args(a.split(','))
    }
}

sourceSets {
    main {
        resources {
            //include '**/*.json', '**/*.xml', '**/*.vtl', '**/*.properties', '**/*.txt', '**/*.graphql', '**/*.sparql', '**/*.ttl'
            include '**/*.json', '**/*.xml', '**/*.vtl', '**/*.properties', '**/*.txt', '**/*.graphql'
     }
    }
}

shadowJar {
    zip64 = true
    exclude 'META-INF/*', 'META-INF/**', 'LICENSE', 'LICENSE/**', 'license', 'license/**'
    //archiveClassifier.set("exe")
    classifier = 'exe'
    manifest {
        attributes("Main-Class": "org.hypergraphql.Application")
    }
}
